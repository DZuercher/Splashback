# Assigns a redshift to the random clusters.
# Only use on random cluster sample
# Only use after jackknife bin has been assigned
# Requires running splashpipe on normal cluster catalog first

import numpy as np 
import pandas as pd

catalog_in = "randoms.csv"
distribution_dir = "./Normal" #Path to the redshift_distribution files generated by the splashpipe procedure
output = "randoms_new.csv"


def assign_reds(catalog_in, distribution_dir, catalog_out):
    data = pd.read_csv(catalog_in, sep = ",")
    jackregs = data.jackreg.values
    jackregs = np.asarray(jackregs)
    redshifts = np.zeros(0)

    for i, jack in enumerate(jackregs):
        array = np.genfromtxt("%s/redshift_distribution_%s.txt" % ( distribution_dir, int(jack) )
        if array.size==0:
            print("No point in this bin !!!!")
            redshift = -99
        else:
            if array.size==1:
                redshift = array
            else:
                number = np.random.randint(array.size, size = 1)
                redshift = array[number]
        redshifts = np.append(redshifts, redshift)
    data["REDSHIFT"] = redshifts
    data.to_csv(catalog_out, index=False, header=['RA','DEC','REDSHIFT','jackreg'])


if __name__=="__main__":
   assign_reds(input_,distribution,output)
   print("Done")
